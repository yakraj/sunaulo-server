{"version":3,"file":"check-geojson.cjs.production.min.js","sources":["../src/errors.ts","../src/types.ts","../src/get_type.ts","../src/get_member_value.ts","../src/get_array.ts","../src/get_object.ts","../src/get_coordinates.ts","../src/array_is_numbers.ts","../src/enforce_position.ts","../src/enforce_position_array.ts","../src/enforce_same_position.ts","../src/enforce_bbox.ts","../src/forbid_confusing_properties.ts","../src/index.ts","../src/check_duplicate_keys.ts"],"sourcesContent":["import { Node } from '@humanwhocodes/momoa';\n\nexport interface HintIssue {\n  from: number;\n  to: number;\n  severity: 'error';\n  message: string;\n}\n\nexport function makeIssue(message: string, node: Node): HintIssue {\n  return {\n    message,\n    severity: 'error',\n    from: node.loc.start.offset,\n    to: node.loc.end.offset,\n  };\n}\n\nexport class HintError extends Error {\n  issues: HintIssue[] = [];\n\n  constructor(issues: HintIssue[]) {\n    super();\n    // restore prototype chain\n    const actualProto = new.target.prototype;\n    Object.setPrototypeOf(this, actualProto);\n    this.issues = issues;\n  }\n\n  get message() {\n    return JSON.stringify(this.issues, null, 2);\n  }\n}\n","import { GeoJSON } from 'geojson';\n\nexport type GeoJSONTypeSet = Set<GeoJSON['type']>;\n\nexport const GEOJSON_FEATURE_TYPE = new Set<GeoJSON['type']>(['Feature']);\n\nexport const GEOJSON_GEOMETRY_TYPES = new Set<GeoJSON['type']>([\n  'Point',\n  'MultiPoint',\n  'Polygon',\n  'MultiPolygon',\n  'LineString',\n  'MultiLineString',\n  'GeometryCollection',\n]);\n\nexport const GEOJSON_GEOMETRY_TYPES_EX_GEOMETRY_COLLECTION = new Set<\n  GeoJSON['type']\n>([\n  'Point',\n  'MultiPoint',\n  'Polygon',\n  'MultiPolygon',\n  'LineString',\n  'MultiLineString',\n]);\n\nexport const GEOJSON_TYPES = new Set<GeoJSON['type']>([\n  ...GEOJSON_GEOMETRY_TYPES,\n  'Feature',\n  'FeatureCollection',\n]);\n","import { GeoJSONTypeSet } from './types';\nimport { GeoJSON } from 'geojson';\nimport { HintIssue, HintError, makeIssue } from './errors';\nimport { Node } from '@humanwhocodes/momoa';\n\nexport function getType(\n  issues: HintIssue[],\n  node: Node,\n  allowedTypes: GeoJSONTypeSet\n) {\n  if (node.type !== 'Object') {\n    throw new HintError([\n      makeIssue('Expected an object, but found an incorrect type.', node),\n    ]);\n  }\n\n  const typeMember = node.members.find(member => {\n    return member.name.value === 'type';\n  });\n\n  if (!typeMember) {\n    issues.push(\n      makeIssue('This GeoJSON object is missing its type member.', node)\n    );\n    return {};\n  }\n\n  const value = typeMember.value;\n\n  if (value.type !== 'String') {\n    issues.push(makeIssue('The type member should have been a string.', node));\n\n    return {};\n  }\n\n  if (!allowedTypes.has(value.value as any)) {\n    issues.push(\n      makeIssue('This type of GeoJSON object is not allowed here.', node)\n    );\n\n    return {};\n  }\n\n  return {\n    type: value.value as GeoJSON['type'],\n    objectNode: node,\n  };\n}\n","import { HintIssue, makeIssue } from './errors';\nimport { ObjectNode } from '@humanwhocodes/momoa';\n\nexport function getMemberValue(\n  issues: HintIssue[],\n  node: ObjectNode,\n  name: string\n) {\n  const member = node.members.find(member => {\n    return member.name.value === name;\n  });\n\n  if (!member) {\n    issues.push(\n      makeIssue(\n        `This GeoJSON object requires a ${name} member but it is missing.`,\n        node\n      )\n    );\n\n    return null;\n  }\n\n  return member.value;\n}\n","import { HintIssue, makeIssue } from './errors';\nimport { Node, ArrayNode } from '@humanwhocodes/momoa';\n\nexport function getArray(\n  issues: HintIssue[],\n  node: Node | null\n): ArrayNode | null {\n  if (node?.type === 'Array') return node;\n  if (node) {\n    issues.push(makeIssue('This must be an array.', node));\n  }\n  return null;\n}\n","import { HintIssue, makeIssue } from './errors';\nimport { Node, ObjectNode } from '@humanwhocodes/momoa';\n\nexport function getObject(\n  issues: HintIssue[],\n  node: Node | null\n): ObjectNode | null {\n  if (node?.type === 'Object') return node;\n  if (node) {\n    issues.push(makeIssue('This must be an object.', node));\n  }\n  return null;\n}\n","import { HintIssue } from './errors';\nimport { ObjectNode } from '@humanwhocodes/momoa';\nimport { getMemberValue } from './get_member_value';\nimport { getArray } from './get_array';\n\nexport function getCoordinates(issues: HintIssue[], node: ObjectNode) {\n  const coordinatesMember = getMemberValue(issues, node, 'coordinates');\n  if (!coordinatesMember) return null;\n  return getArray(issues, coordinatesMember);\n}\n","import { Node } from '@humanwhocodes/momoa';\nimport { HintIssue, makeIssue } from './errors';\n\nexport function arrayIsNumbers(\n  issues: HintIssue[],\n  elements: Node[],\n  name: string\n) {\n  for (let element of elements) {\n    if (element.type !== 'Number') {\n      issues.push(\n        makeIssue(`Each element in a ${name} must be a number.`, element)\n      );\n      return;\n    }\n  }\n}\n","import { HintIssue, makeIssue } from './errors';\nimport { ArrayNode } from '@humanwhocodes/momoa';\nimport { arrayIsNumbers } from './array_is_numbers';\n\nexport function enforcePosition(issues: HintIssue[], node: ArrayNode | null) {\n  // This error has already been caught. Allow a no-op for simplicity.\n  if (node === null) return;\n\n  if (node.elements.length < 2 || node.elements.length > 3) {\n    issues.push(\n      makeIssue(\n        `A position should have 2 or 3 elements - found ${node.elements.length}.`,\n        node\n      )\n    );\n  }\n\n  arrayIsNumbers(issues, node.elements, 'position');\n}\n","import { HintIssue, makeIssue } from './errors';\nimport { enforcePosition } from './enforce_position';\nimport { enforceSamePosition } from './enforce_same_position';\nimport { Node, ArrayNode } from '@humanwhocodes/momoa';\n\nfunction getArray(issues: HintIssue[], node: Node): ArrayNode | null {\n  if (node.type !== 'Array') {\n    issues.push(\n      makeIssue('Expected to find an array of positions here.', node)\n    );\n    return null;\n  }\n  return node;\n}\n\ntype PositionKind = 'Polygon' | 'LineString';\n\nexport function enforcePositionArray(\n  issues: HintIssue[],\n  node: Node | null,\n  kind?: PositionKind\n) {\n  // This error has already been caught. Allow a no-op for simplicity.\n  if (node === null) return;\n\n  node = getArray(issues, node);\n  if (!node) return;\n\n  for (let element of node.elements) {\n    if (element.type !== 'Array') {\n      issues.push(\n        makeIssue(\n          'Expected to find a position here, found another type.',\n          element\n        )\n      );\n      return;\n    } else {\n      enforcePosition(issues, element);\n    }\n  }\n\n  switch (kind) {\n    case 'LineString': {\n      if (node.elements.length < 2) {\n        issues.push(\n          makeIssue('Expected to find two or more positions here.', node)\n        );\n      }\n      break;\n    }\n    case 'Polygon':\n      if (node.elements.length < 4) {\n        issues.push(\n          makeIssue('Expected to find four or more positions here.', node)\n        );\n      }\n      enforceSamePosition(issues, node);\n      break;\n  }\n}\n\nexport function enforcePositionArray2(\n  issues: HintIssue[],\n  node: Node | null,\n  kind?: PositionKind\n) {\n  // This error has already been caught. Allow a no-op for simplicity.\n  if (node === null) return;\n\n  node = getArray(issues, node);\n  if (!node) return;\n\n  for (let element of node.elements) {\n    enforcePositionArray(issues, element, kind);\n  }\n}\n\nexport function enforcePositionArray3(\n  issues: HintIssue[],\n  node: ArrayNode | null,\n  kind?: PositionKind\n) {\n  // This error has already been caught. Allow a no-op for simplicity.\n  if (node === null) return;\n\n  node = getArray(issues, node);\n  if (!node) return;\n\n  for (let element of node.elements) {\n    enforcePositionArray2(issues, element, kind);\n  }\n}\n","import { HintIssue, makeIssue } from './errors';\nimport { ArrayNode, NumberNode } from '@humanwhocodes/momoa';\n\nexport function enforceSamePosition(issues: HintIssue[], node: ArrayNode) {\n  const first = node.elements[0] as ArrayNode;\n  const last = node.elements[node.elements.length - 1] as ArrayNode;\n  const len = Math.max(first.elements.length, last.elements.length);\n\n  for (let j = 0; j < len; j++) {\n    const firstValue = (first.elements[j] as NumberNode | undefined)?.value;\n    const secondValue = (last.elements[j] as NumberNode | undefined)?.value;\n    if (firstValue !== secondValue) {\n      issues.push(\n        makeIssue(\n          'First and last positions of a Polygon or MultiPolygon’s ring should be the same.',\n          first\n        ),\n        makeIssue(\n          'First and last positions of a Polygon or MultiPolygon’s ring should be the same.',\n          last\n        )\n      );\n      return;\n    }\n  }\n}\n","import { HintIssue, makeIssue } from './errors';\nimport { ObjectNode } from '@humanwhocodes/momoa';\nimport { getArray } from './get_array';\nimport { arrayIsNumbers } from './array_is_numbers';\n\nexport function enforceBbox(issues: HintIssue[], node: ObjectNode) {\n  const member = node.members.find(member => {\n    return member.name.value === 'bbox';\n  });\n\n  // bboxes are optional\n  if (member === undefined) return;\n\n  const array = getArray(issues, member.value);\n\n  if (!array) return;\n\n  if (!(array.elements.length === 4 || array.elements.length === 6)) {\n    issues.push(makeIssue('A bbox must have 4 or 6 positions', array));\n  }\n\n  arrayIsNumbers(issues, array.elements, 'bbox');\n}\n","import { HintIssue, makeIssue } from './errors';\nimport { ObjectNode, MemberNode } from '@humanwhocodes/momoa';\n\ntype PropertiesFrom = 'Feature' | 'FeatureCollection' | 'Geometry';\n\nfunction forbidProperty(\n  issues: HintIssue[],\n  member: MemberNode,\n  propertiesFrom: PropertiesFrom,\n  name: string\n) {\n  if (member.name.value === name) {\n    issues.push(\n      makeIssue(\n        `${propertiesFrom} objects cannot contain a member named ${member.name.value}`,\n        member.name\n      )\n    );\n  }\n}\n\nconst FORBIDDEN_PROPERTIES = {\n  Geometry: ['properties', 'geometry', 'features'],\n  Feature: ['features'],\n  FeatureCollection: ['properties', 'coordinates'],\n};\n\nexport function forbidConfusingProperties(\n  issues: HintIssue[],\n  node: ObjectNode,\n  propertiesFrom: PropertiesFrom\n) {\n  for (let member of node.members) {\n    for (let property of FORBIDDEN_PROPERTIES[propertiesFrom]) {\n      forbidProperty(issues, member, propertiesFrom, property);\n    }\n  }\n}\n","import {\n  parse,\n  evaluate,\n  DocumentNode,\n  Node,\n  ObjectNode,\n} from '@humanwhocodes/momoa';\nimport { GeoJSON } from 'geojson';\nimport { HintIssue, HintError, makeIssue } from './errors';\nimport {\n  GeoJSONTypeSet,\n  GEOJSON_TYPES,\n  GEOJSON_GEOMETRY_TYPES,\n  GEOJSON_GEOMETRY_TYPES_EX_GEOMETRY_COLLECTION,\n  GEOJSON_FEATURE_TYPE,\n} from './types';\nimport { getType } from './get_type';\nimport { getMemberValue } from './get_member_value';\nimport { getArray } from './get_array';\nimport { getObject } from './get_object';\nimport { getCoordinates } from './get_coordinates';\nimport { enforcePosition } from './enforce_position';\nimport { checkDuplicateKeys } from './check_duplicate_keys';\nimport {\n  enforcePositionArray,\n  enforcePositionArray2,\n  enforcePositionArray3,\n} from './enforce_position_array';\nimport { enforceBbox } from './enforce_bbox';\nimport { forbidConfusingProperties } from './forbid_confusing_properties';\n\ntype Checker = (issues: HintIssue[], node: ObjectNode) => void;\n\nconst checkGeometryShared: Checker = (issues, node) => {\n  enforceBbox(issues, node);\n  forbidConfusingProperties(issues, node, 'Geometry');\n};\n\nconst checkLineString: Checker = (issues, node) => {\n  enforcePositionArray(issues, getCoordinates(issues, node), 'LineString');\n  checkGeometryShared(issues, node);\n};\n\nconst checkMultiLineString: Checker = (issues, node) => {\n  enforcePositionArray2(issues, getCoordinates(issues, node), 'LineString');\n  checkGeometryShared(issues, node);\n};\n\nconst checkPolygon: Checker = (issues, node) => {\n  enforcePositionArray2(issues, getCoordinates(issues, node), 'Polygon');\n  checkGeometryShared(issues, node);\n};\n\nconst checkMultiPolygon: Checker = (issues, node) => {\n  enforcePositionArray3(issues, getCoordinates(issues, node), 'Polygon');\n  checkGeometryShared(issues, node);\n};\n\nconst checkPoint: Checker = (issues, node) => {\n  enforcePosition(issues, getCoordinates(issues, node));\n  checkGeometryShared(issues, node);\n};\n\nconst checkMultiPoint: Checker = (issues, node) => {\n  enforcePositionArray(issues, getCoordinates(issues, node));\n  checkGeometryShared(issues, node);\n};\n\nconst checkGeometryCollection: Checker = (issues, node) => {\n  checkGeometryShared(issues, node);\n  const geometriesMember = getArray(\n    issues,\n    getMemberValue(issues, node, 'geometries')\n  );\n  if (!geometriesMember) return;\n  for (let element of geometriesMember.elements) {\n    checkObject(issues, element, GEOJSON_GEOMETRY_TYPES_EX_GEOMETRY_COLLECTION);\n  }\n};\n\nconst checkFeature: Checker = (issues, node) => {\n  forbidConfusingProperties(issues, node, 'Feature');\n  const geometryMember = getMemberValue(issues, node, 'geometry');\n  enforceBbox(issues, node);\n  if (geometryMember?.type !== 'Null') {\n    const geometry = getObject(issues, geometryMember);\n    if (geometry) checkObject(issues, geometry, GEOJSON_GEOMETRY_TYPES);\n  }\n\n  const idMember = node.members.find(member => {\n    return member.name.value === 'id';\n  });\n  if (\n    idMember &&\n    !(idMember.value.type === 'String' || idMember.value.type === 'Number')\n  ) {\n    issues.push(makeIssue(`The Feature id must be a string or number.`, node));\n  }\n\n  const properties = getMemberValue(issues, node, 'properties');\n  if (!properties) {\n    issues.push(makeIssue(`The properties member is missing.`, node));\n    return;\n  }\n\n  const { type } = properties;\n\n  if (!(type === 'Object' || type === 'Null')) {\n    issues.push(\n      makeIssue(`The Feature properties member can be an object or null.`, node)\n    );\n  }\n};\n\nconst checkFeatureCollection: Checker = (issues, node) => {\n  forbidConfusingProperties(issues, node, 'FeatureCollection');\n  const featuresMember = getArray(\n    issues,\n    getMemberValue(issues, node, 'features')\n  );\n  if (!featuresMember) return;\n  for (let feature of featuresMember.elements) {\n    const obj = getObject(issues, feature);\n    if (obj) {\n      getType(issues, obj, GEOJSON_FEATURE_TYPE);\n      checkFeature(issues, obj);\n    }\n  }\n};\n\nconst CHECKERS: Record<GeoJSON['type'], Checker> = {\n  LineString: checkLineString,\n  MultiLineString: checkMultiLineString,\n\n  Polygon: checkPolygon,\n  MultiPolygon: checkMultiPolygon,\n\n  Point: checkPoint,\n  MultiPoint: checkMultiPoint,\n\n  GeometryCollection: checkGeometryCollection,\n\n  Feature: checkFeature,\n  FeatureCollection: checkFeatureCollection,\n};\n\nfunction checkObject(\n  issues: HintIssue[],\n  node: Node,\n  typeSet: GeoJSONTypeSet = GEOJSON_TYPES\n) {\n  const { type, objectNode } = getType(issues, node, typeSet);\n  if (!(type && objectNode)) return;\n  checkDuplicateKeys(issues, objectNode);\n  CHECKERS[type](issues, objectNode);\n}\n\nfunction checkInternal(\n  jsonStr: string\n): {\n  ast: DocumentNode | undefined;\n  issues: HintIssue[];\n} {\n  const issues: HintIssue[] = [];\n  let ast;\n  try {\n    ast = parse(jsonStr, {\n      ranges: true,\n    });\n    checkObject(issues, ast.body);\n  } catch (e) {\n    issues.push({\n      message: `Invalid JSON: ${e.message}`,\n      from: 0,\n      to: 0,\n      severity: 'error',\n    });\n  }\n\n  return { ast, issues };\n}\n\nexport const getIssues = (jsonStr: string): HintIssue[] => {\n  return checkInternal(jsonStr).issues;\n};\n\nexport const check = (jsonStr: string): GeoJSON => {\n  const { issues, ast } = checkInternal(jsonStr);\n  if (issues.length || !ast) throw new HintError(issues);\n  return evaluate(ast);\n};\n\nexport { HintError, HintIssue };\n","import { HintIssue, makeIssue } from './errors';\nimport { ObjectNode } from '@humanwhocodes/momoa';\n\nexport function checkDuplicateKeys(\n  issues: HintIssue[],\n  parent: ObjectNode\n): ObjectNode {\n  let keys = new Set<string>();\n  for (let node of parent.members) {\n    const {\n      name: { value },\n    } = node;\n    if (keys.has(value)) {\n      issues.push(\n        makeIssue('Duplicate properties are ambiguous in GeoJSON', node)\n      );\n    }\n    keys.add(value);\n  }\n  return parent;\n}\n"],"names":["makeIssue","message","node","severity","from","loc","start","offset","to","end","HintError","Error","constructor","issues","actualProto","prototype","Object","setPrototypeOf","this","JSON","stringify","GEOJSON_FEATURE_TYPE","Set","GEOJSON_GEOMETRY_TYPES","GEOJSON_GEOMETRY_TYPES_EX_GEOMETRY_COLLECTION","GEOJSON_TYPES","getType","allowedTypes","type","typeMember","members","find","member","name","value","push","has","objectNode","getMemberValue","getArray","getObject","getCoordinates","coordinatesMember","arrayIsNumbers","elements","element","enforcePosition","length","enforcePositionArray","kind","first","last","len","Math","max","j","_first$elements$j","_last$elements$j","enforceSamePosition","enforcePositionArray2","enforceBbox","undefined","array","forbidProperty","propertiesFrom","FORBIDDEN_PROPERTIES","Geometry","Feature","FeatureCollection","forbidConfusingProperties","property","checkGeometryShared","checkFeature","geometryMember","geometry","checkObject","idMember","properties","CHECKERS","LineString","MultiLineString","Polygon","MultiPolygon","enforcePositionArray3","Point","MultiPoint","GeometryCollection","geometriesMember","featuresMember","feature","obj","typeSet","parent","keys","add","checkDuplicateKeys","checkInternal","jsonStr","ast","parse","ranges","body","e","evaluate"],"mappings":"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"}