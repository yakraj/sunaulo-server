"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@humanwhocodes/momoa");function t(e,t){return{message:e,severity:"error",from:t.loc.start.offset,to:t.loc.end.offset}}class n extends Error{constructor(e){super(),this.issues=[];const t=new.target.prototype;Object.setPrototypeOf(this,t),this.issues=e}get message(){return JSON.stringify(this.issues,null,2)}}const o=new Set(["Feature"]),s=new Set(["Point","MultiPoint","Polygon","MultiPolygon","LineString","MultiLineString","GeometryCollection"]),r=new Set(["Point","MultiPoint","Polygon","MultiPolygon","LineString","MultiLineString"]),i=new Set([...s,"Feature","FeatureCollection"]);function u(e,o,s){if("Object"!==o.type)throw new n([t("Expected an object, but found an incorrect type.",o)]);const r=o.members.find(e=>"type"===e.name.value);if(!r)return e.push(t("This GeoJSON object is missing its type member.",o)),{};const i=r.value;return"String"!==i.type?(e.push(t("The type member should have been a string.",o)),{}):s.has(i.value)?{type:i.value,objectNode:o}:(e.push(t("This type of GeoJSON object is not allowed here.",o)),{})}function l(e,n,o){const s=n.members.find(e=>e.name.value===o);return s?s.value:(e.push(t(`This GeoJSON object requires a ${o} member but it is missing.`,n)),null)}function a(e,n){return"Array"===(null==n?void 0:n.type)?n:(n&&e.push(t("This must be an array.",n)),null)}function c(e,n){return"Object"===(null==n?void 0:n.type)?n:(n&&e.push(t("This must be an object.",n)),null)}function m(e,t){const n=l(e,t,"coordinates");return n?a(e,n):null}function f(e,n,o){for(let s of n)if("Number"!==s.type)return void e.push(t(`Each element in a ${o} must be a number.`,s))}function p(e,n){null!==n&&((n.elements.length<2||n.elements.length>3)&&e.push(t(`A position should have 2 or 3 elements - found ${n.elements.length}.`,n)),f(e,n.elements,"position"))}function h(e,n){return"Array"!==n.type?(e.push(t("Expected to find an array of positions here.",n)),null):n}function g(e,n,o){if(null!==n&&(n=h(e,n))){for(let o of n.elements){if("Array"!==o.type)return void e.push(t("Expected to find a position here, found another type.",o));p(e,o)}switch(o){case"LineString":n.elements.length<2&&e.push(t("Expected to find two or more positions here.",n));break;case"Polygon":n.elements.length<4&&e.push(t("Expected to find four or more positions here.",n)),function(e,n){const o=n.elements[0],s=n.elements[n.elements.length-1],r=Math.max(o.elements.length,s.elements.length);for(let n=0;n<r;n++){var i,u;if((null==(i=o.elements[n])?void 0:i.value)!==(null==(u=s.elements[n])?void 0:u.value))return void e.push(t("First and last positions of a Polygon or MultiPolygon’s ring should be the same.",o),t("First and last positions of a Polygon or MultiPolygon’s ring should be the same.",s))}}(e,n)}}}function y(e,t,n){if(null!==t&&(t=h(e,t)))for(let o of t.elements)g(e,o,n)}function b(e,n){const o=n.members.find(e=>"bbox"===e.name.value);if(void 0===o)return;const s=a(e,o.value);s&&(4!==s.elements.length&&6!==s.elements.length&&e.push(t("A bbox must have 4 or 6 positions",s)),f(e,s.elements,"bbox"))}function d(e,n,o,s){n.name.value===s&&e.push(t(`${o} objects cannot contain a member named ${n.name.value}`,n.name))}const v={Geometry:["properties","geometry","features"],Feature:["features"],FeatureCollection:["properties","coordinates"]};function S(e,t,n){for(let o of t.members)for(let t of v[n])d(e,o,n,t)}const P=(e,t)=>{b(e,t),S(e,t,"Geometry")},j=(e,n)=>{S(e,n,"Feature");const o=l(e,n,"geometry");if(b(e,n),"Null"!==(null==o?void 0:o.type)){const t=c(e,o);t&&x(e,t,s)}const r=n.members.find(e=>"id"===e.name.value);r&&"String"!==r.value.type&&"Number"!==r.value.type&&e.push(t("The Feature id must be a string or number.",n));const i=l(e,n,"properties");if(!i)return void e.push(t("The properties member is missing.",n));const{type:u}=i;"Object"!==u&&"Null"!==u&&e.push(t("The Feature properties member can be an object or null.",n))},w={LineString:(e,t)=>{g(e,m(e,t),"LineString"),P(e,t)},MultiLineString:(e,t)=>{y(e,m(e,t),"LineString"),P(e,t)},Polygon:(e,t)=>{y(e,m(e,t),"Polygon"),P(e,t)},MultiPolygon:(e,t)=>{!function(e,t,n){if(null!==t&&(t=h(e,t)))for(let n of t.elements)y(e,n,"Polygon")}(e,m(e,t)),P(e,t)},Point:(e,t)=>{p(e,m(e,t)),P(e,t)},MultiPoint:(e,t)=>{g(e,m(e,t)),P(e,t)},GeometryCollection:(e,t)=>{P(e,t);const n=a(e,l(e,t,"geometries"));if(n)for(let t of n.elements)x(e,t,r)},Feature:j,FeatureCollection:(e,t)=>{S(e,t,"FeatureCollection");const n=a(e,l(e,t,"features"));if(n)for(let t of n.elements){const n=c(e,t);n&&(u(e,n,o),j(e,n))}}};function x(e,n,o=i){const{type:s,objectNode:r}=u(e,n,o);s&&r&&(function(e,n){let o=new Set;for(let s of n.members){const{name:{value:n}}=s;o.has(n)&&e.push(t("Duplicate properties are ambiguous in GeoJSON",s)),o.add(n)}}(e,r),w[s](e,r))}function F(t){const n=[];let o;try{o=e.parse(t,{ranges:!0}),x(n,o.body)}catch(e){n.push({message:"Invalid JSON: "+e.message,from:0,to:0,severity:"error"})}return{ast:o,issues:n}}exports.HintError=n,exports.check=t=>{const{issues:o,ast:s}=F(t);if(o.length||!s)throw new n(o);return e.evaluate(s)},exports.getIssues=e=>F(e).issues;
//# sourceMappingURL=check-geojson.cjs.production.min.js.map
